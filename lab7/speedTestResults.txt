/** Test result of InsertRandomSpeedTest */
This program inserts random Strings of length L
into different types of maps as <String, Integer> pairs.

Please enter desired length of each string: 1000

Enter # strings to insert into the maps: 1000
class ULLMap: 0.04 sec
class BSTMap: 0.02 sec
Java's Built-in TreeMap: 0.02 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 5000
class ULLMap: 0.37 sec
class BSTMap: 0.08 sec
Java's Built-in TreeMap: 0.07 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into the maps: 10000
class ULLMap: 2.37 sec
class BSTMap: 0.15 sec
Java's Built-in TreeMap: 0.14 sec

Would you like to try more timed-tests? (y/n)n

Process finished with exit code 0

/** Test result of InsertInOrderSpeedTest. */
This program inserts lexicographically increasing Strings into Maps as <String, Integer> pairs.

Enter # strings to insert into the maps: 1000
class ULLMap: 0.04 sec
class BSTMap: 0.02 sec
Java's Built-in TreeMap: 0.01 sec
Java's Built-in HashMap: 0.00 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into the maps: 5000
class ULLMap: 0.28 sec
class BSTMap: 0.33 sec
Java's Built-in TreeMap: 0.00 sec
Java's Built-in HashMap: 0.00 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into the maps: 10000
class ULLMap: 0.77 sec
class BSTMap: 1.96 sec
Java's Built-in TreeMap: 0.01 sec
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n): n

Process finished with exit code 0